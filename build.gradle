plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
	id 'com.modrinth.minotaur' version '2.+'
}

version = project.mod_version
group = project.maven_group

modrinth {
	token = project.hasProperty('modrinthKey') ? modrinthKey : null
	projectId = 'litemoretica'
	uploadFile = remapJar
	version = "${project.version}+mc${project.minecraft_version}"
	gameVersions.set(project.modrinth_compatible_versions.split(',').toList())
	loaders.set(['fabric', 'quilt'])
	def changelogFile = file('changelog.txt')
	changelog = changelogFile.exists() ? changelogFile.text : ''
}

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = 'CurseMaven'
		url = 'https://www.cursemaven.com'
		content {
			includeGroup 'curse.maven'
		}
	}

	maven {
		name = 'Modrinth'
		url = 'https://api.modrinth.com/maven'
		content {
			includeGroup 'maven.modrinth'
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "net.minecraft:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	modImplementation "curse.maven:malilib-${project.masa_minecraft_version}-303119:${project.malilib_fileid}"
	modImplementation "curse.maven:litematica-${project.masa_minecraft_version}-308892:${project.litematica_fileid}"
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.4.1")))
}

processResources {
	inputs.property "version", project.version
	inputs.property "minecraft_version", project.minecraft_version
	inputs.property "loader_version", project.loader_version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version,
				"mcversions": project.modjson_compatible_versions
	}
}
loom {
	accessWidenerPath = file("src/main/resources/tellmewhatineed.accesswidener")
}
tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}